{"ast":null,"code":"var _jsxFileName = \"/Users/owner/Documents/GitHub/justin_cursor/Pomodoro/application/src/components/PomodoroTimer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport CircularProgress from './CircularProgress';\nimport TimerControls from './TimerControls';\nimport TomatoIcon from './TomatoIcon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst POMODORO_TIME = 25 * 60; // 25 minutes in seconds\n\nfunction PomodoroTimer() {\n  _s();\n  const [timeLeft, setTimeLeft] = useState(POMODORO_TIME);\n  const [isActive, setIsActive] = useState(false);\n  const [points, setPoints] = useState(0);\n  const timerRef = useRef(null);\n\n  // Format time as MM:SS\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  // Calculate progress percentage\n  const progress = timeLeft / POMODORO_TIME * 100;\n\n  // Timer functionality\n  useEffect(() => {\n    if (isActive && timeLeft > 0) {\n      timerRef.current = setTimeout(() => {\n        setTimeLeft(timeLeft - 1);\n      }, 1000);\n    } else if (isActive && timeLeft === 0) {\n      // Timer completed\n      setIsActive(false);\n      setPoints(points + 1);\n      // Play sound or notification here\n    }\n    return () => {\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n      }\n    };\n  }, [isActive, timeLeft, points]);\n\n  // Timer controls\n  const startTimer = () => {\n    setIsActive(true);\n  };\n  const pauseTimer = () => {\n    setIsActive(false);\n  };\n  const resetTimer = () => {\n    setIsActive(false);\n    setTimeLeft(POMODORO_TIME);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-xl shadow-lg p-8 max-w-md w-full\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative w-64 h-64 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n          progress: progress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute inset-0 flex items-center justify-center\",\n          children: /*#__PURE__*/_jsxDEV(TomatoIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute inset-0 flex items-center justify-center\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-4xl font-bold text-gray-800\",\n            children: formatTime(timeLeft)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TimerControls, {\n        isActive: isActive,\n        onStart: startTimer,\n        onPause: pauseTimer,\n        onReset: resetTimer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: \"Completed Pomodoros\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-2xl font-bold text-tomato\",\n          children: points\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(PomodoroTimer, \"cdvAcsBGEforyAn3F/KkPTk6+Ko=\");\n_c = PomodoroTimer;\nexport default PomodoroTimer;\nvar _c;\n$RefreshReg$(_c, \"PomodoroTimer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","CircularProgress","TimerControls","TomatoIcon","jsxDEV","_jsxDEV","POMODORO_TIME","PomodoroTimer","_s","timeLeft","setTimeLeft","isActive","setIsActive","points","setPoints","timerRef","formatTime","seconds","mins","Math","floor","secs","toString","padStart","progress","current","setTimeout","clearTimeout","startTimer","pauseTimer","resetTimer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onStart","onPause","onReset","_c","$RefreshReg$"],"sources":["/Users/owner/Documents/GitHub/justin_cursor/Pomodoro/application/src/components/PomodoroTimer.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport CircularProgress from './CircularProgress';\nimport TimerControls from './TimerControls';\nimport TomatoIcon from './TomatoIcon';\n\nconst POMODORO_TIME = 25 * 60; // 25 minutes in seconds\n\nfunction PomodoroTimer() {\n  const [timeLeft, setTimeLeft] = useState(POMODORO_TIME);\n  const [isActive, setIsActive] = useState(false);\n  const [points, setPoints] = useState(0);\n  const timerRef = useRef(null);\n\n  // Format time as MM:SS\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  // Calculate progress percentage\n  const progress = (timeLeft / POMODORO_TIME) * 100;\n\n  // Timer functionality\n  useEffect(() => {\n    if (isActive && timeLeft > 0) {\n      timerRef.current = setTimeout(() => {\n        setTimeLeft(timeLeft - 1);\n      }, 1000);\n    } else if (isActive && timeLeft === 0) {\n      // Timer completed\n      setIsActive(false);\n      setPoints(points + 1);\n      // Play sound or notification here\n    }\n\n    return () => {\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n      }\n    };\n  }, [isActive, timeLeft, points]);\n\n  // Timer controls\n  const startTimer = () => {\n    setIsActive(true);\n  };\n\n  const pauseTimer = () => {\n    setIsActive(false);\n  };\n\n  const resetTimer = () => {\n    setIsActive(false);\n    setTimeLeft(POMODORO_TIME);\n  };\n\n  return (\n    <div className=\"bg-white rounded-xl shadow-lg p-8 max-w-md w-full\">\n      <div className=\"flex flex-col items-center\">\n        <div className=\"relative w-64 h-64 mb-4\">\n          <CircularProgress progress={progress} />\n          <div className=\"absolute inset-0 flex items-center justify-center\">\n            <TomatoIcon />\n          </div>\n          <div className=\"absolute inset-0 flex items-center justify-center\">\n            <span className=\"text-4xl font-bold text-gray-800\">{formatTime(timeLeft)}</span>\n          </div>\n        </div>\n\n        <TimerControls\n          isActive={isActive}\n          onStart={startTimer}\n          onPause={pauseTimer}\n          onReset={resetTimer}\n        />\n\n        <div className=\"mt-6 text-center\">\n          <p className=\"text-gray-600\">Completed Pomodoros</p>\n          <span className=\"text-2xl font-bold text-tomato\">{points}</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PomodoroTimer; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,aAAa,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;;AAE/B,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAACQ,aAAa,CAAC;EACvD,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAMiB,QAAQ,GAAGf,MAAM,CAAC,IAAI,CAAC;;EAE7B;EACA,MAAMgB,UAAU,GAAIC,OAAO,IAAK;IAC9B,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,GAAG,EAAE,CAAC;IACrC,MAAMI,IAAI,GAAGJ,OAAO,GAAG,EAAE;IACzB,OAAO,GAAGC,IAAI,CAACI,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIF,IAAI,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;EAClF,CAAC;;EAED;EACA,MAAMC,QAAQ,GAAIf,QAAQ,GAAGH,aAAa,GAAI,GAAG;;EAEjD;EACAP,SAAS,CAAC,MAAM;IACd,IAAIY,QAAQ,IAAIF,QAAQ,GAAG,CAAC,EAAE;MAC5BM,QAAQ,CAACU,OAAO,GAAGC,UAAU,CAAC,MAAM;QAClChB,WAAW,CAACD,QAAQ,GAAG,CAAC,CAAC;MAC3B,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM,IAAIE,QAAQ,IAAIF,QAAQ,KAAK,CAAC,EAAE;MACrC;MACAG,WAAW,CAAC,KAAK,CAAC;MAClBE,SAAS,CAACD,MAAM,GAAG,CAAC,CAAC;MACrB;IACF;IAEA,OAAO,MAAM;MACX,IAAIE,QAAQ,CAACU,OAAO,EAAE;QACpBE,YAAY,CAACZ,QAAQ,CAACU,OAAO,CAAC;MAChC;IACF,CAAC;EACH,CAAC,EAAE,CAACd,QAAQ,EAAEF,QAAQ,EAAEI,MAAM,CAAC,CAAC;;EAEhC;EACA,MAAMe,UAAU,GAAGA,CAAA,KAAM;IACvBhB,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,MAAMiB,UAAU,GAAGA,CAAA,KAAM;IACvBjB,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC;EAED,MAAMkB,UAAU,GAAGA,CAAA,KAAM;IACvBlB,WAAW,CAAC,KAAK,CAAC;IAClBF,WAAW,CAACJ,aAAa,CAAC;EAC5B,CAAC;EAED,oBACED,OAAA;IAAK0B,SAAS,EAAC,mDAAmD;IAAAC,QAAA,eAChE3B,OAAA;MAAK0B,SAAS,EAAC,4BAA4B;MAAAC,QAAA,gBACzC3B,OAAA;QAAK0B,SAAS,EAAC,yBAAyB;QAAAC,QAAA,gBACtC3B,OAAA,CAACJ,gBAAgB;UAACuB,QAAQ,EAAEA;QAAS;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACxC/B,OAAA;UAAK0B,SAAS,EAAC,mDAAmD;UAAAC,QAAA,eAChE3B,OAAA,CAACF,UAAU;YAAA8B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC,eACN/B,OAAA;UAAK0B,SAAS,EAAC,mDAAmD;UAAAC,QAAA,eAChE3B,OAAA;YAAM0B,SAAS,EAAC,kCAAkC;YAAAC,QAAA,EAAEhB,UAAU,CAACP,QAAQ;UAAC;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7E,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAEN/B,OAAA,CAACH,aAAa;QACZS,QAAQ,EAAEA,QAAS;QACnB0B,OAAO,EAAET,UAAW;QACpBU,OAAO,EAAET,UAAW;QACpBU,OAAO,EAAET;MAAW;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,eAEF/B,OAAA;QAAK0B,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/B3B,OAAA;UAAG0B,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACpD/B,OAAA;UAAM0B,SAAS,EAAC,gCAAgC;UAAAC,QAAA,EAAEnB;QAAM;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC5B,EAAA,CA7EQD,aAAa;AAAAiC,EAAA,GAAbjC,aAAa;AA+EtB,eAAeA,aAAa;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}